import { ParseError } from "./ParseError.js";
export class ValueParser {
  parser;
  isOptional;
  type;
  constructor(parser, isOptional, type){
    this.parser = parser;
    this.isOptional = isOptional;
    this.type = type;
  }
  parse(value) {
    // In case, parsing result is specified as optional, and passed value is considered as empty,
    // we can return undefined. Otherwise, pass to parser.
    if (this.isOptional && value === undefined) {
      return undefined;
    }
    try {
      return this.parser(value);
    } catch (cause) {
      throw new ParseError(value, {
        type: this.type,
        cause
      });
    }
  }
  optional() {
    this.isOptional = true;
    return this;
  }
}
//# sourceMappingURL=ValueParser.js.map