import { bindMiniAppCSSVars } from "../../css/bindMiniAppCSSVars.js";
import { bindThemeCSSVars } from "../../css/bindThemeCSSVars.js";
import { bindViewportCSSVars } from "../../css/bindViewportCSSVars.js";
/**
 * Converts init cssVars option to more narrow type.
 * @param option - option value.
 */ function parseCSSVarsOptions(option) {
  if (typeof option === 'object') {
    return option;
  }
  return option ? {
    themeParams: true,
    viewport: true,
    miniApp: true
  } : {};
}
/**
 * Process initialization CSS vars option.
 * @param option - option value.
 * @param miniApp - MiniApp instance.
 * @param themeParams - ThemeParams instance.
 * @param viewportOrPromise - Viewport instance or promise resolving it.
 */ export function processCSSVars(option, miniApp, themeParams, viewportOrPromise) {
  const cssVarsOptions = parseCSSVarsOptions(option);
  if (cssVarsOptions.miniApp) {
    bindMiniAppCSSVars(miniApp, themeParams);
  }
  if (cssVarsOptions.themeParams) {
    bindThemeCSSVars(themeParams);
  }
  if (cssVarsOptions.viewport) {
    if (viewportOrPromise instanceof Promise) {
      viewportOrPromise.then(bindViewportCSSVars);
    } else {
      bindViewportCSSVars(viewportOrPromise);
    }
  }
}
//# sourceMappingURL=processCSSVarsOption.js.map