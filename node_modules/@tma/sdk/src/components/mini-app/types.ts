import type { HeaderColorKey } from '../../bridge/methods/methods.ts';
import type { PostEvent } from '../../bridge/methods/postEvent.ts';
import type { RGB } from '../../colors/types.ts';
import type { StateEvents } from '../../state/types.ts';
import type { CreateRequestIdFunc } from '../../types/request-id.ts';
import type { Version } from '../../version/types.ts';

export interface MiniAppProps {
  headerColor: MiniAppHeaderColor;
  backgroundColor: RGB;
  version: Version;
  botInline: boolean;
  createRequestId: CreateRequestIdFunc;
  postEvent?: PostEvent;
}

export type MiniAppHeaderColor = HeaderColorKey | RGB;

export interface MiniAppState {
  backgroundColor: RGB;
  headerColor: MiniAppHeaderColor;
}

export type MiniAppEvents = StateEvents<MiniAppState>;

export type MiniAppEventName = keyof MiniAppEvents;

export type MiniAppEventListener<E extends MiniAppEventName> = MiniAppEvents[E];

export interface RequestedContact {
  contact: {
    userId: number;
    phoneNumber: string;
    firstName: string;
    lastName?: string;
  };
  authDate: Date;
  hash: string;
}
