import type { ClosingBehaviorEvents } from "./types.js";
import type { PostEvent } from "../../bridge/methods/postEvent.js";
import { EventEmitter } from "../../event-emitter/EventEmitter.js";
type Emitter = EventEmitter<ClosingBehaviorEvents>;
/**
 * Component responsible for controlling current closing confirmation
 * status.
 */ export declare class ClosingBehavior {
  private readonly postEvent: any;
  private readonly ee: any;
  private readonly state: any;
  constructor(isConfirmationNeeded: boolean, postEvent?: PostEvent);
  private isConfirmationNeeded: any;
  /**
   * Returns true, if the confirmation dialog enabled while the user is trying
   * to close the Mini App.
   */ get isConfirmationNeeded(): boolean;
  /**
   * Disables the confirmation dialog while the user is trying to close the
   * Mini App.
   */ disableConfirmation(): void;
  /**
   * Enables the confirmation dialog while the user is trying to close the
   * Mini App.
   */ enableConfirmation(): void;
  /**
   * Adds new event listener.
   */ on: Emitter['on'];
  /**
   * Removes event listener.
   */ off: Emitter['off'];
}
//# sourceMappingURL=ClosingBehavior.d.ts.map